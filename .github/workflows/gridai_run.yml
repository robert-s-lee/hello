name: "gridai-run"

on:
  # push:
  pull_request:  
  schedule:
  # run at 13 min past the hour every day
  # MIN HOUR DOM MON DOW CMD
    - cron: 33 * * * *

jobs:
  gridlogin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8' # min version supported by Grid.ai
      - run: |
          python -m pip install --upgrade pip
      - run: |
          pip install lightning-grid --upgrade
      - run: |
          grid login --username ${{ secrets.GRIDAI_USERNAME }} --key ${{ secrets.GRIDAI_KEY }}
      - run: |
          grid run --localdir --use_spot --dependency_file requirements.txt hello.py | tee grid.run.log
          RUN_NAME=$(grep grid_name grid.run.log | cut -d':' -f 2 | sed -e 's/^[[:space:]]*//')
          echo "RUN_NAME=${RUN_NAME}" >> $GITHUB_ENV
          if [[ -z "${RUN_NAME}" ]]; then
            echo "Error: grid_name not found in output"
            exit 1
          fi
      - run: |
          JSON_FILE=$(grid status --export json ${RUN_NAME} | grep Exported | awk '{print $5}')
          RUN_STATUS=$(cat ${JSON_FILE} | jq -r -c '.[] | .status')
          # pool at 1 min interval
          while [ "${RUN_STATUS}" = 'queued' -o "${RUN_STATUS}" = 'running' -o "${RUN_STATUS}" = 'pending' ]; do 
            echo "${RUN_NAME}:${RUN_STATUS} waiting 60 sec for next status"
            sleep 60 
            JSON_FILE=$(grid status --export json ${RUN_NAME} | grep Exported | awk '{print $5}')
            RUN_STATUS=$(cat ${JSON_FILE} | jq -r -c '.[] | .status')
          done
          # only continue on successful completion
          case ${RUN_STATUS} in
            completed|succeeded)
              echo "${RUN_NAME}:completed"
              ;;
            *)
              echo "Error: ${RUN_NAME} did not finish with completed or succeeded"
              exit 1
          esac
      - run: |
          grid artifacts ${{ env.RUN_NAME }}
          if [[ $? != 0 ]]; then
            echo "Error: ${RUN_NAME} artifacts not found"
            exit 1
          fi
          ls grid_artifacts/*
