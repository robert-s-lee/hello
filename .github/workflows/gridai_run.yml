name: "gridai-run"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
  # run at 13 min past the hour every day
  # MIN HOUR DOM MON DOW CMD
    - cron: 33 * * * *

jobs:
  gridlogin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8' # min version supported by Grid.ai
      - run: |
          python -m pip install --upgrade pip
      - run: |
          pip install lightning-grid --upgrade
      - run: |
          grid login --username ${{ secrets.GRIDAI_USERNAME }} --key ${{ secrets.GRIDAI_KEY }}
      - run: |
          grid run --localdir --use_spot --dependency_file requirements.txt hello.py | tee /tmp/grid.run.log
          RUN_NAME=$(grep grid_name /tmp/grid.run.log | cut -d':' -f 2 | sed -e 's/^[[:space:]]*//')
          echo "RUN_NAME=${RUN_NAME}" >> $GITHUB_ENV
          if [[ -z "${RUN_NAME}" ]]; then
            echo "Error: grid_name not found in output"
            exit 1
          fi
      - run: |
          JSON_FILE=$(grid status --export json ${RUN_NAME} | grep Exported | awk '{print $5}')
          while [ "$(cat ${JSON_FILE} | jq -c '.[] | .status')" = '"queued"' ]; do echo "waiting on ${RUN_NAME}"; sleep 60; JSON_FILE=$(grid status --export json ${RUN_NAME} | grep Exported | awk '{print $5}'); done
          RUN_STATUS=$(cat ${JSON_FILE} | jq -c '.[] | .status')
          if [[ "${RUN_STATUS}" != '"completed"' ]]; then
            echo "Error: ${RUN_NAME} completed expected but exited with ${RUN_STATUS}"
            exit 1
          fi
      - run: |
          grid artifacts ${{ env.RUN_NAME }}
          if [[ $? !- 0 ]]; then
            echo "Error: ${RUN_NAME} artifacts not found"
            exit 1
          fi
          cd ${{ env.RUN_NAME }}*
          ls
